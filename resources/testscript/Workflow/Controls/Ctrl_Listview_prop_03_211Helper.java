// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.testscript.Workflow.Controls;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>Ctrl_Listview_prop_03_211</b><br>
 * Generated     : <b>2011/10/27 3:04:03 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 build 2600 Service Pack 2 <br>
 * 
 * @since  October 27, 2011
 * @author xjf
 */
public abstract class Ctrl_Listview_prop_03_211Helper extends RationalTestScript
{
	/**
	 * CCombo: with default state.
	 *		.groupText : Input Data Binding
	 * 		.mappableClassIndex : 0
	 * 		.class : org.eclipse.swt.custom.CCombo
	 * 		.priorLabel : Name:
	 * 		.classIndex : 0
	 */
	protected ScrollTestObject cCombo() 
	{
		return new ScrollTestObject(
                        getMappedTestObject("cCombo"));
	}
	/**
	 * CCombo: with specific test context and state.
	 *		.groupText : Input Data Binding
	 * 		.mappableClassIndex : 0
	 * 		.class : org.eclipse.swt.custom.CCombo
	 * 		.priorLabel : Name:
	 * 		.classIndex : 0
	 */
	protected ScrollTestObject cCombo(TestObject anchor, long flags) 
	{
		return new ScrollTestObject(
                        getMappedTestObject("cCombo"), anchor, flags);
	}
	
	/**
	 * List: with default state.
	 *		.mappableClassIndex : 0
	 * 		.itemCount : 3
	 * 		.itemText : {dept_id,dept_name,dept_head_id}
	 * 		.class : org.eclipse.swt.widgets.List
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list"));
	}
	/**
	 * List: with specific test context and state.
	 *		.mappableClassIndex : 0
	 * 		.itemCount : 3
	 * 		.itemText : {dept_id,dept_name,dept_head_id}
	 * 		.class : org.eclipse.swt.widgets.List
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list"), anchor, flags);
	}
	
	

	protected Ctrl_Listview_prop_03_211Helper()
	{
		setScriptName("testscript.Workflow.Controls.Ctrl_Listview_prop_03_211");
	}
	
}

