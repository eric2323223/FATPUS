// DO NOT EDIT: This file is automatically generated each time the script is modified.
// To modify this file either use 'Insert Java Code Snippet'or 'Insert Java Method' 
// option from simplified script.
package testscript.Workflow.WS;
import resources.testscript.Workflow.WS.WS_ComplexArray_ParaHelper;
import testscript.Workflow.cfg.Cfg;

import com.rational.test.ft.*;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.value.*;
import com.rational.test.ft.vp.*;
import component.entity.EE;
import component.entity.MBOProperties;
import component.entity.WN;
import component.entity.WorkFlow;
import component.entity.WorkFlowEditor;
import component.entity.WFCustomizer.WFCustomizer;
import component.entity.customJsGenerator.CustomJsTestScript;
import component.entity.model.DeployOption;
import component.entity.model.PK;
import component.entity.model.WFScreenMenuItem;
import component.entity.model.WSCP;
import component.entity.model.WSMBO;
import component.entity.model.WSOperation;
import component.entity.model.WorkFlowPackage;
import component.entity.resource.Criteria;
import component.entity.resource.RC;
import component.entity.resource.WS;
import component.entity.wizard.WSMBORebindWizard;

/**
 * Description   : Functional Test Script
 * @author yangg
 */
public class WS_ComplexArray_Para extends WS_ComplexArray_ParaHelper
{	
	/**
	 * Script Name   : <b>WS_ComplexArray_Para</b>
	 * Generated     : <b>Apr 15, 2012 7:46:58 PM</b>
	 * Description   : Functional Test Script
	 * Original Host : WinNT Version 5.1  Build 2600 (S)
	 * 
	 * @since  2012/04/15
	 * @author yangg
	 */
	public void testMain(Object[] args) 
	{ 	

//		EE.createWSCP(new WSCP(RC.getResource(WS.class, new Criteria().equal("name", "wscp"))).name("wscp"), true);
//		sleep(2);
//	    EE.connectConnectionProfile("Web Services->wscp");
//	    
//		WN.useProject(Cfg.projectName);
//	    EE.createMboOperation(new WSMBO().startParameter("Web Services->wscp->SimpleArray->Sort"));
////	   
//	    WN.createPK(new PK().startParameter(Cfg.projectName).name("pk1").type("STRING(300)[]").storage("Transient"));
//	    WN.deployProject(new DeployOption().startParameter(WN.mboPath(Cfg.projectName, "SortObject"))
//				.server("My Unwired Server")
//				.serverConnectionMapping("wscp,wscp")
//				);
//	    WN.createWorkFlow(new WorkFlow().startParameter(Cfg.projectName)
//				.name(Cfg.wfName)
//				.option(WorkFlow.SP_CLIENT_INIT)
//				);
	    MBOProperties mbo1=new MBOProperties(Cfg.projectName,"SortObject");
	    mbo1.setOperationParameterComplexTypeDefaultValue("sort", "arg0", "['3','1','2']");
	    mbo1.setOperationParameterPK("sort", "arg0", "pk1");
	    

		
//		WFCustomizer.runTest(new WorkFlowPackage().startParameter(WN.filePath(Cfg.projectName, Cfg.wfName))
//				.deployToServer("true")
//				.unwiredServer("My Unwired Server")
//				.assignToUser(testscript.Workflow.cfg.Cfg.deviceUser), 
//				customJsTestScript(),
//				testscript.Workflow.cfg.Cfg.tplanscript_C);
//							
	}
	
	private CustomJsTestScript customJsTestScript() {
		CustomJsTestScript s = new CustomJsTestScript();
		s.screen("Start").moveTo("getAlltypecreate").throughMenuItem("Open getAlltypecreate");
		s.screen("getAlltypecreate").setData("getAlltype_create_IntType_paramKey", "123");
		s.screen("getAlltypecreate").setData("getAlltype_create_StringType_paramKey", "WE test");
		
		
		s.screen("getAlltypecreate").moveTo("getAlltype").throughMenuItem("Create");
		
		return s;
	
							
	}
}
		